:ruby
  # Buyer version of orders list compared to /admin/orders, so hidden attributes and
  # linked to readonly view of order details

  is_admin = spree_current_user&.admin?
  specific_product_or_seller = [params[:with_product_id], params[:q].try(:[], :seller_user_id_eq)].compact.present?

- content_for :head do
  = stylesheet_link_tag 'spree/record_reviews'

- recent_order = @recent_transactions_of_wanted_products&.first&.order
- combined_orders = ( !is_admin? ? [recent_order].compact : [] ) +  @orders.to_a
- if !is_admin? && combined_orders.count > 12
  - fifth_order = @recent_transactions_of_wanted_products&.second&.order
  - eleventh_order = @recent_transactions_of_wanted_products&.third&.order

  - combined_orders.insert(4, fifth_order) if fifth_order
  - combined_orders.insert(10, eleventh_order) if eleventh_order

- combined_orders.compact!


- if !is_admin || @user.nil?
  - content_for :page_title do
    = (params[:state].present? ? Spree.t("admin.order_state_name.#{params[:state]}") : '')
    - if is_admin && @user
      = link_to "#{Spree.t('admin.sellers.sales') } by #{@user.username_or_email}", spree.admin_sales_path(q:{ seller_user_id_eq: @user.id })
    = " of Product #{params[:with_product_id]}" if params[:with_product_id]

- else
  - content_for :page_header do
    = render partial: 'spree/admin/users/seller_info_navbar', locals:{ user: @user }

- if is_admin && @users.present?
  = content_for :page_header do
    - if @store_payment_method
      %div.mt-3
        %span(class="js-filter badge badge-secondary") Payment Account ID: #{@store_payment_method.account_id_in_parameters}
    %div(class="mt-3 mb-5 user-results")
      = render partial:'spree/admin/users/seller_row', collection: @users, as: :user, locals:{ highlight_matched_words: params[:keywords], paypal: Spree::PaymentMethod.paypal, show_admin_actions: true }

- if params[:state] == 'paid_need_tracking'
  = content_for :page_actions do
    %div(class="dropdown mr-3")
      %button(class="btn btn-sm btn-secondary dropdown-toggle" type="button" id="dropdownSortButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false")
        Sort Order
      - sort_link_class = "dropdown-item p-1 border-top border-bottom"
      - current_s = params[:q].try(:fetch, :s) || 'completed_at desc'
      %div(class="dropdown-menu" aria-labelledby="dropdownSortButton")
        = sort_link @search, 'completed_at desc', 'TRX Time Desc', {}, { class: sort_link_class + (current_s == 'completed_at desc' ? ' font-weight-bold' : '') }
        = sort_link @search, 'count_of_paid_need_tracking_value desc', 'Paid Need Tracking Desc', {}, { class: sort_link_class + (current_s == 'count_of_paid_need_tracking_value desc' ? ' font-weight-bold' : '') }

= render partial:'assets_inline'
- if is_admin && specific_product_or_seller
  - if params[:state] == 'complaints' && (complaints_weekly_data = complaints_weekly(params))
    %div.mt-2.mb-5
      = column_chart( complaints_weekly_data, min: (complaints_weekly_data.values.min.to_i * 0.9).to_i )
  - else (txns_weekly_data = txns_weekly(params))
    %div.mt-2.mb-5
      = column_chart( txns_weekly_data, min: (txns_weekly_data.values.min.to_i * 0.9).to_i )
- elsif is_admin && !specific_product_or_seller && @users.nil?
  %div.mb-2
    = render 'spree/admin/shared/daily_transactions_complaints_stats'
- if combined_orders.count > 0
  - content_for :content_header_top do
    .row
      .col-0.col-md-1
      .col-12.col-md-12
        - if !is_admin?
          %h4.text-bold= t('seller.items_you_should_be_selling')
          = render partial: 'spree/shared/carousel/scroller', locals: {line_items: @recent_transactions_of_wanted_products&.first&.is_a?(::Spree::LineItem) ? @recent_transactions_of_wanted_products[3..] : @recent_transactions_of_wanted_products&.map(&:line_item)[3..], id: 'wanted_products'} if @recent_transactions_of_wanted_products.present?
          = render partial: 'spree/admin/shared/get_more_sales_banner'
  .orders-table
    - date_label = ''
    - order_index = 0
    - combined_orders.each do |order|
      :ruby
        order_row_class = (order_index % 2 == 0) ? 'even' : 'odd'
        cur_order_date_label = order.completed_at.try(:strftime, '%b %o, %Y') || ''
        date_label_to_show = nil
        unless cur_order_date_label == date_label
          date_label_to_show = content_tag(:span, class: "date-label#{' at-border' if order_index>0}") do
              cur_order_date_label
            end
          date_label = cur_order_date_label
        else
          date_label_to_show = content_tag(:span, class: "no-date-label") do
            " "
            end
        end
        order_index += 1
      %div(class="state-#{order.state.downcase} #{order_row_class} mb-3 order-in-list #{'missed-order' if order.seller != spree_current_user && !is_admin?}")
        = date_label_to_show&.html_safe
        - if !is_admin? && order.seller != spree_current_user
          = render partial: 'missed_sale_order_in_list', locals: { order: order, show_full_info: false, has_warning: false, image_link_content: (is_admin ? :small : :icon), specific_user_id: @user&.id }
        - else
          = render partial: 'order_in_list', locals: { order: order, show_full_info: false, has_warning: false, image_link_content: (is_admin ? :small : :icon), specific_user_id: @user&.id }
- else
  .alert.alert-info.no-objects-found
    = Spree.t(:no_resource_found, resource: plural_resource_name(Spree::Order))
= render 'spree/admin/shared/index_table_options', collection: @orders, simple: true

%br/
